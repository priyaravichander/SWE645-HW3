{"version":3,"sources":["./src/app/surveyrecords/surveyrecords.component.ts","./src/app/surveyrecords/surveyrecords.component.html","./src/environments/environment.ts","./src/app/surveyform/surveyform.component.ts","./src/app/surveyform/surveyform.component.html","./src/app/success/success.component.ts","./src/app/success/success.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient,HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n\n  \n@Component({\n  selector: 'app-surveyrecords',\n  templateUrl: './surveyrecords.component.html',\n  styleUrls: ['./surveyrecords.component.css']\n})\n\nexport class SurveyrecordsComponent implements OnInit {\n  \n  constructor(private httpClient: HttpClient) {\n   \n  }\n  public columndefs: any[] = ['firstname','lastname', 'city', 'state', 'zipcode', 'phone', 'email'\n  ,'date', 'favorite', 'interest','recommendation', 'raffle', 'comments'];\n  public surveyrecords: any[] = [];\n  \n  cleanString(str:string) {\n    str = str.replace('\"[', '[');\n    str = str.replace(']\"', ']');\n  return str;\n}\n  ngOnInit(): void {\n    \n    const REST_API_SERVER = environment.apiUrl;\n    const headers = {\n      'Accept': 'application/json'\n    };\n    \n    this.httpClient.get(REST_API_SERVER, { 'headers': headers }).subscribe((data: any) => {\n      for (var val of data[\"result\"]) {\n       \n        const json:any = this.cleanString(val);\n        console.log(JSON.parse(json));\n        this.surveyrecords.push(JSON.parse(json));\n      }\n      \n      \n      console.log(this.surveyrecords)\n      \n      \n    });\n    \n  }\n  dataSource = this.surveyrecords;\n  \n  \n  \n}\n","<table>\n\n  <tr>\n\n    <th\n      *ngFor = \"let column of columndefs\">\n      {{column}}\n    </th>\n  </tr>\n  <tr *ngFor = \"let row of surveyrecords\">\n    <td *ngFor = \"let column of columndefs\">\n      {{row[column]}}\n    </td>\n  </tr>\n</table>\n\n<h3 style=\"text-align: center;color: black;\" class=\"w3-jumbo w3-animate-top\">Team: Vandana Keshavamurthy, Dhruv Rami, Madeline Fredriksz, Priya Ravichander</h3>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nexport interface EnvironmentInterface {\n  production: boolean;\n  apiUrl: string;\n}\nexport const environment: EnvironmentInterface = {\n  production: false,\n  apiUrl: 'http://3.210.201.242:31859/SurveyApp/survey',\n  // apiUrl: \"http://localhost:8080/SurveyApp/survey\"\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-surveyform',\n  templateUrl: './surveyform.component.html',\n  styleUrls: ['./surveyform.component.css']\n})\nexport class SurveyformComponent implements OnInit {\n  \n  favoriteOptions = [\n    {name:'Students', value:'Students', checked:false},\n    {name:'Location', value:'Location', checked:false},\n    { name: 'Campus', value: 'Campus', checked: false },\n    { name: 'Atmosphere', value: 'Atmosphere', checked: false },\n    { name: 'Dorm Rooms', value: 'DormRooms', checked: false },\n    { name: 'Sports', value: 'Sports', checked: false },\n    {name:'Other', value:'Other', checked:false}\n  ]\n  public FirstName: string;\n  public LastName: string;\n  public StreetAddress: string;\n  public City: string;\n  public State: string;\n  public Zipcode: string;\n  public Phone: string;\n  public Email: string;\n  public Date: string;\n  public favorite: string;\n  public interest: string;\n  public recommendation: string;\n  public raffle: string;\n  public comments: string;\n  public uploadForm: FormGroup | undefined;\n  \n  constructor(private httpClient: HttpClient, private router: Router) {\n    \n    this.FirstName = \"\";\n    this.LastName = \"\";\n    this.StreetAddress = \"\";\n    this.City = \"\";\n    this.State = \"\";\n    this.Zipcode = \"\";\n    this.Phone = \"\";\n    this.Email = \"\";\n    this.Date = \"\";\n    this.favorite = \"\";\n    this.interest = \"\";\n    this.recommendation = \"\";\n    this.raffle = \"\";\n    this.comments = \"\";\n\n  }\n   \n  ngOnInit(): void {\n    this.uploadForm = new FormGroup({\n      customerFirstName: new FormControl(null, Validators.required)\n    });\n  }\n  private REST_API_SERVER = environment.apiUrl;\n  \n  onSubmit(formData: { FirstName: string; LastName: string; }) {\n \n    \n    const headers = {\n      'content-type': 'application/json', 'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n    }\n    console.log(\"slecetd options\"+this.selectedOptions);\n    \n    const body = \"{ \\\"firstname\\\":\\\"\" + this.FirstName + \"\\\", \\\"lastname\\\":\\\"\" + this.LastName + \"\\\",\\\"streetAddress\\\":\\\"\"\n      + this.StreetAddress + \"\\\",\\\"city\\\":\\\"\" + this.City + \"\\\",\\\"state\\\":\\\"\" + this.State + \"\\\",\\\"zipcode\\\":\\\"\"\n      + this.Zipcode + \"\\\",\\\"phone\\\":\\\"\" + this.Phone + \"\\\",\\\"email\\\":\\\"\" + this.Email + \"\\\",\\\"date\\\":\\\"\" + this.Date + \"\\\",\\\"favorite\\\":\\\"\"\n      + this.selectedOptions + \"\\\",\\\"interest\\\":\\\"\" + this.interest + \"\\\",\\\"recommendation\\\":\\\"\" + this.recommendation + \"\\\",\\\"raffle\\\":\"\n      + \"\\\"\" + this.raffle + \"\\\"\" + \",\\\"comments\\\":\\\"\" + this.comments + \"\\\"}\";\n    \n    \n    console.log(this.httpClient.post(this.REST_API_SERVER, body, { 'headers': headers }).subscribe());\n    this.router.navigate(['success']);\n    \n }\n get selectedOptions() { \n  return this.favoriteOptions\n            .filter(opt => opt.checked)\n            .map(opt => opt.value)\n}\n}\n","\n\n\n<body class=\"w3-light-grey\" >\n\n\n\t<div class=\"w3-content\" style=\"max-width: 1400px\">\n\n\t\t<header class=\"w3-container w3-center w3-padding-32\">\n\t\t\t<h1>\n\t\t\t\t<b>Student Survey Form!</b>\n\t\t\t</h1>\n\t\t\t\n\t\t</header>\n\n\t\t<div class=\"w3-row\">\n\n\t\t\t<div style=\"width: 100%\">\n\t\t\t\t<div class=\"w3-card-4 w3-margin w3-white\">\n\t\t\t\t\t<div class=\"w3-container\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<b>Prospective Students Survey Form</b>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\tWelcome prospective students, please answer the questions below.\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<span class=\"w3-opacity\">Questions marked <span id=\"asterisk\">*</span> are mandatory.</span>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"w3-container\">\n\t\t\t\t\t\t<form #formData=\"ngForm\" name=\"surveyForm\" (ngSubmit)=\"onSubmit(formData.value)\"> \n\n\t\t\t\t\t\t\t<div formGroupName=\"userDetail\">\n\t\t\t\t\t\t\t<br><b> Q1. Please enter your personal information below. (all fields are required)<span id=\"asterisk\">*</span></b><br>\n\t\t\t\t\t\t\t<div class=\"w3-container\">\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>First Name:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input id=\"FirstName\" #firstname=\"ngModel\" class=\"form-control\" type=\"text\" [(ngModel)]=\"FirstName\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Last Name:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"LastName\" [(ngModel)]=\"LastName\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Street Address:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"StreetAddress\" [(ngModel)]=\"StreetAddress\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>City:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"City\" [(ngModel)]=\"City\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>State:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"State\" [(ngModel)]=\"State\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Zipcode:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"Zipcode\" [(ngModel)]=\"Zipcode\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Telephone Number:<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"Phone\" [(ngModel)]=\"Phone\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>E-mail:<span id=\"asterisk\">*</span>:</td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"Email\" [(ngModel)]=\"Email\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>Today's date (Ex. 01/01/2021):<span id=\"asterisk\">*</span></td>\n\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"Date\" [(ngModel)]=\"Date\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<br><b> Q2. What did you like most about the campus? (select 1 or more checkboxes from below)</b> \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<label for=\"favoriteOptions\"></label>\n\t\t\t\t\t\t\t\t<div *ngFor=\"let option of favoriteOptions; let i = index\">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"options_{{i}}\"\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"{{option.value}}\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"option.checked\"/>\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<br><b>Q3. How did you become interested in the university? (select from the radio buttons below) </b>\n\t\t\t\t\t\t\t\t<div class=\"w3-container\"><div class=\"w3-container\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"Q3\" id=\"Friends\" value=\"Friends\"  [(ngModel)]=\"interest\" [ngModelOptions]=\"{standalone: true}\"/> \n\t\t\t\t\t\t\t\t<label for=\"Friends\">Friends</label>\n\t\t\t\t\t\t\t\t<br /> \n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"Q3\" id=\"Television\" value=\"Television\"  [(ngModel)]=\"interest\" [ngModelOptions]=\"{standalone: true}\"/> \n\t\t\t\t\t\t\t\t<label for=\"Television\">Television</label>\n\t\t\t\t\t\t\t\t<br /> \n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"Q3\" id=\"Internet\" value=\"Internet\" [(ngModel)]=\"interest\" [ngModelOptions]=\"{standalone: true}\"/> \n\t\t\t\t\t\t\t\t<label for=\"Internet\">Internet</label> \n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"Q3\" id=\"College Fairs\" value=\"College Fairs\"  [(ngModel)]=\"interest\" [ngModelOptions]=\"{standalone: true}\"/> \n\t\t\t\t\t\t\t\t<label for=\"College Fair\">College Fair</label> \n\t\t\t\t\t\t\t\t<br /> \n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"Q3\" id=\"Teachers/Professionals\" value=\"Teachers/Professionals\"  [(ngModel)]=\"interest\" [ngModelOptions]=\"{standalone: true}\"/> \n\t\t\t\t\t\t\t\t<label for=\"Teachers/Professionals\">Teachers/Professionals</label> \n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"Q3\" id=\"Other\" value=\"Other\"  [(ngModel)]=\"interest\" [ngModelOptions]=\"{standalone: true}\"/> \n\t\t\t\t\t\t\t\t<label for=\"Other\">Other</label> \n\t\t\t\t\t\t\t\t<div class=\"w3-container\"><div id=\"textbox\" style=\"display: none\"> Please specify: <input type=\"text\" id=\"textbox\"  /></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<br><b>Q4. How likely are you to recommend this school to other prospective students? (choose an option from the dropdown list below)</b> \n\t\t\t\t\t\t\t\t<br> \n\t\t\t\t\t\t\t\t<div class=\"w3-container\"><div class=\"w3-container\">\n\t\t\t\t\t\t\t\t<select name=\"Options\" id=\"Options\" [(ngModel)]=\"recommendation\" [ngModelOptions]=\"{standalone: true}\" required>\n\t\t\t\t\t\t\t\t\t<option style=\"display:none\" selected=\"selected\" value=\"\">Click here for options </option>\n\t\t\t\t\t\t\t\t\t<option value=\"Very Likely\">Very Likely</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Likely\">Likely</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Unlikely\">Unlikely</option>\n\t\t\t\t\t\t\t\t</select> \n\t\t\t\t\t\t\t\t</div></div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<br><b>Q5. You have a chance to win a raffle for a free movie ticket!</b> \n\t\t\t\t\t\t\t\t<br> \n\t\t\t\t\t\t\t\t<div class=\"w3-container\"><div class=\"w3-container\">\n\t\t\t\t\t\t\t\tPlease enter at least 10 comma separated numbers ranging from 1 through a 100. (Ex: 1,2,3,4,5,6,7,8,9,10)<br>\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>Raffle:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"Raffle\" [(ngModel)]=\"raffle\" [ngModelOptions]=\"{standalone: true}\" required></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div></div>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p><b>Additional Comments, Suggestions, and Concerns:</b></p>\n\t\t\t\t\t\t\t<textarea rows=\"4\" cols=\"40\" id=“Comments” [(ngModel)]=\"comments\" [ngModelOptions]=\"{standalone: true}\" required></textarea>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<br/> <br />\n\t\t\t\t\t\t\t<p>Select \"Submit Answers\" to submit your responses. Select \"Cancel\" to clear your responses. </p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<button type=\"submit\" [disabled]=\"!LastName||!FirstName||!StreetAddress||!City||!Zipcode||!Phone||!Email||!Date||!interest||!recommendation||!raffle||!comments\"> Submit Answers</button>\n\t\t\t\t\t\t\t<br /> <br />\n\t\t\t\t\t\t\t<button type=reset>Cancel</button>\n\t\t\t\t\t\t\t<br /> <br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n<div class=\"w3-container\">\n\n\t<p>We hope your enjoy your time at our university! Welcome!</p>\n\t<h3 style=\"text-align: center;color: black;\" class=\"w3-jumbo w3-animate-top\">Team: Vandana Keshavamurthy, Dhruv Rami, Madeline Fredriksz, Priya Ravichander</h3>\n\n\t<div class=\"w3-row\"></div>\n</div>\n<hr>\n\n\n\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n<body>\n<div style=\"width:100%; height:100%;text-align: center;font-size: 60px;\">\n    <p>Thank you!</p>\n    <p> Survey submitted successfully. </p><p>\n        <button (click)=\"router.navigate(['/homepage']);\" style=\"background-color: cadetblue;\">\n            <span>Go to home Page</span>\n         </button></div>\n\n         <h3 style=\"text-align: center;color: black;\" class=\"w3-jumbo w3-animate-top\">Team: Vandana Keshavamurthy, Dhruv Rami, Madeline Fredriksz, Priya Ravichander</h3>\n  \n</body>\n</html>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Vandana, Dhruv, Madeline, Priya -->\n<!-- Home page with links to the survey form and list of survey records-->\n\n\n\n\n\n\n\n\n\n<body>\n\n<div class=\"bgimg w3-display-container w3-animate-opacity w3-text-white\">\n  <div class=\"w3-display-topleft w3-padding-large w3-xlarge\">\n    <h3 style=\"text-align: center;font-size: 50px;color: white\">SWE-645</h3>\n  </div>\n  <div class=\"w3-display-middle\">\n    <h1 style=\"text-align: center;color:white\" class=\"w3-jumbo w3-animate-top\"><a style=\"color: white\" routerLink=\"/surveyform\" >Submit Survey Form </a></h1>\n    \n    <h1 style=\"text-align: center;color: white;\" class=\"w3-jumbo w3-animate-top\"><a style=\"color: white\" routerLink=\"/surveyrecords\" >View Survey Records </a></h1>\n    <h3 style=\"text-align: center;color: white;\" class=\"w3-jumbo w3-animate-top\">Team: Vandana Keshavamurthy, Dhruv Rami, Madeline Fredriksz, Priya Ravichander</h3>\n\n  </div>\n \n</div>\n \n<p></p>\n</body>\n\n\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hw3';\n}\n","\n\n\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule , Routes} from '@angular/router';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSortModule } from '@angular/material/sort';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SurveyformComponent } from './surveyform/surveyform.component';\nimport { SurveyrecordsComponent } from './surveyrecords/surveyrecords.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SuccessComponent } from './success/success.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SurveyformComponent,\n    SurveyrecordsComponent,\n    HomepageComponent,\n    SuccessComponent\n    \n   \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    \n    FormsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n\n    RouterModule.forRoot([\n      {\n        path: 'homepage',\n        component: HomepageComponent\n      },\n      {\n        path: 'surveyform',\n        component: SurveyformComponent\n      },\n      {\n        path: 'surveyrecords',\n        \n        component: SurveyrecordsComponent\n      },\n      {\n        path: 'success',\n        \n        component: SuccessComponent\n      }\n\n     \n\n    ]),\n    HttpClientModule\n    \n\n  ],\n  exports: [RouterModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}